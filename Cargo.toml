[package]
name = "rust-to-prod"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# We could use any path here, but we are following the community convention
# We could specify the library name useing the `name` field. If unspecified,
# cargo will default to `package.name`, which is what we want
path = "src/lib.rs"

# Notice the double square brackets: it's an array in TOML's syntax.
# We can only have one library in a project, but we can have multiple binaries!
# If you want to manage multiple libraries in the same repository
# have a look at the workspace feature - we'll cover this later on.
[[bin]]
path = "src/main.rs"
name = "rust-to-prod"

[dependencies]
actix-web = "4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
serde = { version = "1", features = ["derive"] }
serde-aux = "4"
serde_json = "1"
config = "0.13"
uuid = { version = "1", features = ["v4", "serde"] }
chrono = { version = "0.4.22", default-features = false, features = ["clock"] }
log = "0.4"
tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
secrecy = { version = "0.8", features = ["serde"] }
tracing-actix-web = "0.7"
unicode-segmentation = "1"
validator = "0.16"
# We need the `std_rng` to get access to the PRNG we want
rand = { version = "0.8", features = ["std_rng"] }
thiserror = "1"
anyhow = "1"
base64 = "0.21"
argon2 = { version = "0.4", features = ["std"] }
urlencoding = "2"
htmlescape = "0.3"
actix-web-flash-messages = { version = "0.4", features = ["cookies"] }
actix-session = { version = "0.7", features = ["redis-rs-tls-session"] }
# Used for experimental features, may not be great to use for production
actix-web-lab = "0.18"

# Using a table-like toml syntax to avoid a super-long line
[dependencies.sqlx]
version = "0.6"
default-features = false
features = [
  "runtime-tokio-rustls",
  "macros",
  "postgres",
  "uuid",
  "chrono",
  "migrate",
  "offline",
]

[dependencies.reqwest]
version = "0.11"
default-features = false
# We need the `json` feature flag to serialize/deserialize JSON payloads
features = ["json", "rustls-tls", "cookies"]

# Dev dependencies are used exclusively when running tests or examples
# They do not get included in the final application binary!
[dev-dependencies]
once_cell = "1"
claims = "0.7"
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
tokio = { version = "1", features = ["rt", "macros"] }
wiremock = "0.5"
linkify = "0.9"
serde_urlencoded = "0.7.1"
